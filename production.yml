version: '3'

volumes:
  anjan_postgres_data: { }
  anjan_postgres_data_backups: { }

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: "${DJANGO_IMAGE_NAME}"
    container_name: "${DJANGO_CONTAINER_NAME}"
    volumes:
      - /var/www/anjan.itlink.uz/media:/app/app/media
      - /var/www/anjan.itlink.uz/static:/app/staticfiles
    depends_on:
      - postgres
      - redis
    ports:
      - "5100:5000"
    env_file:
      - .env
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: "${POSTGRES_IMAGE_NAME}"
    container_name: "${POSTGRES_CONTAINER_NAME}"
    volumes:
      - anjan_postgres_data:/var/lib/postgresql/data
      - anjan_postgres_data_backups:/backups
    env_file:
      - .env

  redis:
    image: docker.io/redis:6
    container_name: "${REDIS_CONTAINER_NAME}"

  celeryworker:
    <<: *django
    image: "${CELERY_WORKER_IMAGE_NAME}"
    container_name: "${CELERY_WORKER_CONTAINER_NAME}"
    command: /start-celeryworker
    ports: [ ]

  celerybeat:
    <<: *django
    image: "${CELERY_BEAT_IMAGE_NAME}"
    container_name: "${CELERY_BEAT_CONTAINER_NAME}"
    command: /start-celerybeat
    ports: [ ]

  bot:
    <<: *django
    image: "${BOT_IMAGE_NAME}"
    container_name: "${BOT_CONTAINER_NAME}"
    depends_on:
      - redis
      - postgres
    ports: [ ]
    command: /start-bot
